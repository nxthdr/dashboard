{
    metrics
}

:80 {
    # Handle API requests first - explicitly only for the agents endpoint
    handle /api/saimiris/agents {
        # Strip the /api/saimiris part and add /api
        rewrite * /api/agents

        # Forward to the target server
        reverse_proxy https://saimiris.nxthdr.dev {
            header_up Host {http.reverse_proxy.upstream.hostport}
            header_up Accept "application/json"

            # Add CORS headers
            header_down Access-Control-Allow-Origin "*"
            header_down Access-Control-Allow-Methods "GET, OPTIONS"
            header_down Access-Control-Allow-Headers "Accept, Content-Type, Authorization"
        }
    }

    # Handle API requests for user info
    handle /api/saimiris/user/me {
        # Strip the /api/saimiris part and add /api
        rewrite * /api/user/me

        # Forward to the target server
        reverse_proxy https://saimiris.nxthdr.dev {
            header_up Host {http.reverse_proxy.upstream.hostport}
            header_up Accept "application/json"
            # Pass authorization header through
            header_up Authorization {http.request.header.Authorization}

            # Add CORS headers
            header_down Access-Control-Allow-Origin "*"
            header_down Access-Control-Allow-Methods "GET, OPTIONS"
            header_down Access-Control-Allow-Headers "Accept, Content-Type, Authorization"
        }
    }

    # Handle API requests for user prefixes
    handle /api/saimiris/user/prefixes {
        # Strip the /api/saimiris part and add /api
        rewrite * /api/user/prefixes

        # Forward to the target server
        reverse_proxy https://saimiris.nxthdr.dev {
            header_up Host {http.reverse_proxy.upstream.hostport}
            header_up Accept "application/json"
            # Pass authorization header through
            header_up Authorization {http.request.header.Authorization}

            # Add CORS headers
            header_down Access-Control-Allow-Origin "*"
            header_down Access-Control-Allow-Methods "GET, OPTIONS"
            header_down Access-Control-Allow-Headers "Accept, Content-Type, Authorization"
        }
    }

    # Serve everything else as static files
    handle {
        root * /www/html
        encode gzip
        file_server
        try_files {path} /index.html
    }
}
